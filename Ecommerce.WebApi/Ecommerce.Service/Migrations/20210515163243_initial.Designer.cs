// <auto-generated />
using System;
using Ecommerce.Service.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ecommerce.Service.Migrations
{
    [DbContext(typeof(EcommerceContext))]
    [Migration("20210515163243_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ecommerce.Service.Model.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("Ecommerce.Service.Model.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Produtoid")
                        .HasColumnType("int");

                    b.Property<int?>("pedidoid")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Produtoid");

                    b.HasIndex("pedidoid");

                    b.ToTable("item");
                });

            modelBuilder.Entity("Ecommerce.Service.Model.Pedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("clienteid")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataPedido")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.ToTable("pedido");
                });

            modelBuilder.Entity("Ecommerce.Service.Model.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("preco")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("produto");
                });

            modelBuilder.Entity("Ecommerce.Service.Model.Item", b =>
                {
                    b.HasOne("Ecommerce.Service.Model.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("Produtoid");

                    b.HasOne("Ecommerce.Service.Model.Pedido", "pedido")
                        .WithMany()
                        .HasForeignKey("pedidoid");

                    b.Navigation("pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ecommerce.Service.Model.Pedido", b =>
                {
                    b.HasOne("Ecommerce.Service.Model.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteid");

                    b.Navigation("cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
